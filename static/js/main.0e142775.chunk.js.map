{"version":3,"sources":["components/Section/Section.js","components/Statistics/Statistics.js","layout/layouts.js","layout/colors.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notofication.js","components/ResetButton/ResetButton.js","components/Title/Title.js","components/Feedback/Feedback.js","App.js","index.js"],"names":["Section","children","flex","vertical","SectionWrapper","defaultProps","styled","section","props","styles","redColor","whiteColor","blueColor","darkColor","yellowColor","greenColor","Statistics","good","neutral","bad","total","percent","List","ListItem","listItemStyles","listItemTypes","green","color","yellow","red","blue","white","ul","li","FeedbackWrapper","div","FeedbackButton","button","FeedbackOptions","options","onLeaveFeedback","map","element","type","title","onClick","Notofication","message","NotoficationWrapper","Text","p","ResButton","ResetButton","onResetButton","Title","titleType","titleStyles","TitleH1","TitleH2","titleTypes","accented","normal","h1","h2","Feedback","state","option","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","floor","this","initialValue","stateArray","Object","keys","Component","deafaultProps","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0e142775.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Section = ({ children, flex, vertical }) => {\n  return (\n    <SectionWrapper flex={flex} vertical={vertical}>\n      {children}\n    </SectionWrapper>\n  );\n};\n\nSection.defaultProps = {\n  flex: false,\n  vertical: false,\n};\n\nSection.propTypes = {\n  children: PropTypes.node,\n  vertical: PropTypes.bool,\n};\n\nconst SectionWrapper = styled.section`\n  ${props =>\n    props.flex\n      ? 'display: flex; align-items: center; justify-content: center; flex-direction: row;'\n      : 'display: block;'};\n\n  ${props => (props.vertical ? 'flex-direction: column;' : '')};\n\n  padding: 0 25px;\n  margin: 0;\n`;\n\nexport default Section;\n","import PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { getStyles } from '../../layout/layouts';\nconst styles = getStyles();\n\nconst Statistics = ({ good, neutral, bad, total, percent }) => {\n  return (\n    <List>\n      <ListItem listItemStyles=\"green\">Good: {good}</ListItem>\n      <ListItem listItemStyles=\"yellow\">Neutral: {neutral}</ListItem>\n      <ListItem listItemStyles=\"red\">Bad: {bad}</ListItem>\n      <ListItem listItemStyles=\"white\">Total: {total}</ListItem>\n      <ListItem listItemStyles=\"blue\">Positive feedback: {percent}%</ListItem>\n    </List>\n  );\n};\n\nStatistics.defaultProps = {\n  good: 0,\n  neutral: 0,\n  bad: 0,\n  total: 0,\n  percent: 0,\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number,\n  percent: PropTypes.number,\n};\n\nconst listItemTypes = {\n  green: {\n    color: `${styles.greenColor}`,\n  },\n  yellow: {\n    color: `${styles.yellowColor}`,\n  },\n  red: {\n    color: `${styles.redColor}`,\n  },\n  blue: {\n    color: `${styles.blueColor}`,\n  },\n  white: {\n    color: `${styles.whiteColor}`,\n  },\n};\n\nconst List = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n\nconst ListItem = styled.li`\n  font-family: 'Roboto', sans-serif;\n  font-size: 20px;\n  font-weight: 600;\n  padding: 2px;\n  color: ${({ listItemStyles }) => listItemTypes[listItemStyles].color};\n`;\n\nexport default Statistics;\n","import * as colors from './colors';\n\nexport function getStyles(params) {\n  return {\n    redColor: colors.redColor,\n    whiteColor: colors.whiteColor,\n    blueColor: colors.blueColor,\n    darkColor: colors.darkColor,\n    yellowColor: colors.yellowColor,\n    greenColor: colors.greenColor,\n  };\n}\n","export const redColor = '#ef2f3c';\nexport const whiteColor = '#f6f4f3';\nexport const blueColor = '#276fbf';\nexport const darkColor = '#183059';\nexport const yellowColor = '#f0a202';\nexport const greenColor = '#27991a';\n","import PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <FeedbackWrapper>\n      {options.map(element => (\n        <FeedbackButton\n          key={element}\n          type=\"button\"\n          title={`Leave a ${element} response`}\n          onClick={() => {\n            onLeaveFeedback(element);\n          }}\n        >\n          {element}\n        </FeedbackButton>\n      ))}\n    </FeedbackWrapper>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string),\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nconst FeedbackWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 5px 10px;\n`;\n\nconst FeedbackButton = styled.button`\n  padding: 10px 20px;\n  font-family: var(--big);\n  font-weight: 700;\n  text-transform: capitalize;\n  color: var(--yellow);\n  border: 1px solid gray;\n  border-radius: 6px;\n  box-shadow: 0.5px 0.5px 0.5px 0.5px gray;\n  transition: all 250ms ease-in;\n  :first-of-type {\n    color: var(--green);\n  }\n  :last-of-type {\n    color: var(--red);\n  }\n  :hover {\n    color: var(--white);\n    background-color: var(--yellow);\n  }\n  :first-of-type:hover {\n    background-color: var(--green);\n  }\n  :last-of-type:hover {\n    background-color: var(--red);\n  }\n`;\n\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Notofication = ({ message }) => {\n  return (\n    <NotoficationWrapper>\n      <Text>{message}</Text>\n    </NotoficationWrapper>\n  );\n};\n\nNotofication.defaultProps = {\n  message: \"It's empty here\",\n};\n\nNotofication.propTypes = {\n  message: PropTypes.string,\n};\n\nconst NotoficationWrapper = styled.div`\n  padding: 5px;\n`;\nconst Text = styled.p`\n  margin: 0;\n  font-family: 'Roboto', sans-serif;\n  font-size: 20px;\n  font-weight: 600;\n  text-align: center;\n`;\n\nexport default Notofication;\n","import PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst ResetButton = ({ onResetButton }) => {\n  return (\n    <ResButton title=\"Reset values\" onClick={onResetButton}>\n      Reset\n    </ResButton>\n  );\n};\n\nResetButton.propTypes = {\n  onResetButton: PropTypes.func.isRequired,\n};\n\nconst ResButton = styled.button`\n  padding: 10px 20px;\n  font-family: var(--big);\n  font-weight: 700;\n  text-transform: capitalize;\n  color: var(--dark);\n  background-color: var(--white);\n  border: 1px solid gray;\n  border-radius: 6px;\n  box-shadow: 0.5px 0.5px 0.5px 0.5px gray;\n  transition: all 250ms ease-in;\n  :hover {\n    color: var(--white);\n    background-color: var(--dark);\n  }\n`;\n\nexport default ResetButton;\n","import PropTypes from 'prop-types';\nimport { Fragment } from 'react';\nimport styled from 'styled-components';\nimport { getStyles } from '../../layout/layouts';\nconst styles = getStyles();\n\nconst Title = ({ title, titleType, titleStyles }) => {\n  return (\n    <Fragment>\n      {titleType === true ? (\n        <TitleH1 titleStyles={titleStyles}>{title}</TitleH1>\n      ) : (\n        <TitleH2 titleStyles={titleStyles}>{title}</TitleH2>\n      )}\n    </Fragment>\n  );\n};\n\nTitle.defaultProps = {\n  title: 'Title',\n  titleType: false,\n  titleStyles: 'normal',\n};\n\nTitle.propTypes = {\n  title: PropTypes.string,\n  titleType: PropTypes.bool,\n  titleStyles: PropTypes.string,\n};\n\nconst titleTypes = {\n  accented: {\n    color: `${styles.yellowColor}`,\n  },\n  normal: {\n    color: `${styles.blueColor}`,\n  },\n};\n\nconst TitleH1 = styled.h1`\n  text-align: center;\n  font-size: 32px;\n  font-family: var(--big);\n  color: ${({ titleStyles }) => titleTypes[titleStyles].color};\n`;\n\nconst TitleH2 = styled.h2`\n  text-align: center;\n  font-size: 28px;\n  font-family: var(--font);\n  color: ${({ titleStyles }) => titleTypes[titleStyles].color};\n`;\n\nexport default Title;\n","import React, { Component, Fragment } from 'react';\nimport Section from '../Section';\nimport Statistics from '../Statistics';\nimport FeedbackOptions from '../FeedbackOptions';\nimport Notification from '../Notification';\nimport ResetButton from '../ResetButton';\nimport Title from '../Title';\n\nexport class Feedback extends Component {\n  static deafaultProps = {\n    initialValue: 0,\n  };\n\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  componentDidMount() {\n    this.setState({ good: this.props.initialValue });\n  }\n\n  onLeaveFeedback = option => {\n    this.setState(prevState => {\n      return {\n        [option]: prevState[option] + 1,\n      };\n    });\n  };\n\n  onResetButton = () => {\n    this.setState({\n      good: 0,\n      neutral: 0,\n      bad: 0,\n    });\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    const total = this.countTotalFeedback();\n    return total ? Math.floor((good / total) * 100) : 0;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const percent = this.countPositiveFeedbackPercentage();\n    const stateArray = Object.keys(this.state);\n\n    return (\n      <>\n        <Section flex={false} vertical={false}>\n          <Title\n            title=\"Cafe Expresso\"\n            titleType={true}\n            titleStyles=\"accented\"\n          />\n          <Title\n            title=\"Please leave feedback\"\n            titleType={false}\n            titleStyles=\"normal\"\n          />\n          <FeedbackOptions\n            options={stateArray}\n            onLeaveFeedback={this.onLeaveFeedback}\n          />\n        </Section>\n        <Section flex={true} vertical={true}>\n          <Title title=\"Statistics\" titleType={false} titleStyles=\"accented\" />\n\n          {total !== 0 ? (\n            <Fragment>\n              <Statistics\n                good={good}\n                neutral={neutral}\n                bad={bad}\n                total={total}\n                percent={percent}\n                listItemStyles=\"green\"\n              />\n              <ResetButton onResetButton={this.onResetButton} />\n            </Fragment>\n          ) : (\n            <Notification message=\"There is no feedback\" />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default Feedback;\n","import React, { Component } from 'react';\nimport Feedback from './components/Feedback';\nexport class App extends Component {\n  render() {\n    return <Feedback initialValue={0} />;\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}